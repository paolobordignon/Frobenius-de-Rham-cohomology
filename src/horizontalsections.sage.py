

# This file was *autogenerated* from the file horizontalsections.sage
from sage.all_cmdline import *   # import sage library

_sage_const_20 = Integer(20); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1); _sage_const_2 = Integer(2)

def horizontal_basis(N,N_pow_ser = False):
    R2 = LaurentSeriesRing(QQ, names=('t',)); (t,) = R2._first_ngens(1)
    R1 = PolynomialRing(QQ, names=('a', 'b', 'c', 'd',)); (a, b, c, d,) = R1._first_ngens(4)
    R = LaurentSeriesRing(R1,'t',default_prec = _sage_const_20 , names=('t',)); (t,) = R._first_ngens(1)
    N2 = matrix([[R(N[_sage_const_0 ,_sage_const_0 ]),R(N[_sage_const_0 ,_sage_const_1 ])],[R(N[_sage_const_1 ,_sage_const_0 ]),R(N[_sage_const_1 ,_sage_const_1 ])]])
    U = identity_matrix(R,_sage_const_2 )
    U1 = matrix([[a,b],[c,d]])
    
    for i in range(_sage_const_1 ,R.default_prec()):
        U += U1*t**i
        N1 = ((N2*U+U.derivative(t))/t**(i-_sage_const_1 ))(t=_sage_const_0 )
        J = R1.ideal(N1.list())
        U = U(a=J.reduce(a),b=J.reduce(b),c=J.reduce(c),d=J.reduce(d))

    U2 = matrix([[R2(U[_sage_const_0 ,_sage_const_0 ]),R2(U[_sage_const_0 ,_sage_const_1 ])],[R2(U[_sage_const_1 ,_sage_const_0 ]),R2(U[_sage_const_1 ,_sage_const_1 ])]])

    if N_pow_ser:
        return (U2,N2)
    else:
        return U2

